{
  "address": "0x49B7D46558308d507AaDc1575e919D5eBF283dFf",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d5500f9339d894ab3a79c0cceef487a1260245f56fe688ce072899cd6a2b037",
  "receipt": {
    "to": null,
    "from": "0x3A17045d7db4d825477CeF64cbb9b9a903F93031",
    "contractAddress": "0x49B7D46558308d507AaDc1575e919D5eBF283dFf",
    "transactionIndex": 0,
    "gasUsed": "1338727",
    "logsBloom": "0x
    "blockHash": "0x4f83e352d46456b5419a72e835023fb37a1dc519e4b96dd5b264c6210364dc4a",
    "transactionHash": "0x2d5500f9339d894ab3a79c0cceef487a1260245f56fe688ce072899cd6a2b037",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 20978026,
        "transactionHash": "0x2d5500f9339d894ab3a79c0cceef487a1260245f56fe688ce072899cd6a2b037",
        "address": "0x49B7D46558308d507AaDc1575e919D5eBF283dFf",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003a17045d7db4d825477cef64cbb9b9a903f93031"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0x4f83e352d46456b5419a72e835023fb37a1dc519e4b96dd5b264c6210364dc4a"
      }
    ],
    "blockNumber": 20978026,
    "cumulativeGasUsed": "1338727",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Avax Zate",
    "AZATE"
  ],
  "numDeployments": 1,
  "solcInputHash": "8f5c745b976fb19bf57ea2f13e5792a3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token/AvaxERC20.sol\":\"AvaxERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token/AvaxERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport {ERC20} from \\\"solmate/src/tokens/ERC20.sol\\\";\\n\\n// A standard ERC20 token with maxSupply of 1 million\\ncontract AvaxERC20 is ERC20 {\\n  uint public constant MAX_SUPPLY = 1000000 ether;\\n\\n  // maxSupply is sent to the creator of the token\\n  constructor(\\n    string memory _name,\\n    string memory _symbol\\n  ) ERC20(_name, _symbol, 18) {\\n    _mint(msg.sender, MAX_SUPPLY);\\n  }\\n}\\n\",\"keccak256\":\"0xc9fb39924418d1ab789e193d8689e0ec3a46539879627832cebce7ba32a80b25\",\"license\":\"MIT\"},\"solmate/src/tokens/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address => uint256) public balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable INITIAL_CHAIN_ID;\\n\\n    bytes32 internal immutable INITIAL_DOMAIN_SEPARATOR;\\n\\n    mapping(address => uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        INITIAL_CHAIN_ID = block.chainid;\\n        INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator();\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline >= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner's nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) && recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001e9f38038062001e9f8339818101604052810190620000379190620003aa565b8181601282600090816200004c91906200067a565b5081600190816200005e91906200067a565b508060ff1660808160ff16815250504660a0818152505062000085620000b360201b60201c565b60c08181525050505050620000ab3369d3c21bcecceda10000006200014360201b60201c565b50506200097e565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000e7919062000810565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001620001289594939291906200089a565b60405160208183030381529060405280519060200120905090565b806002600082825462000157919062000926565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200020b919062000961565b60405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002808262000235565b810181811067ffffffffffffffff82111715620002a257620002a162000246565b5b80604052505050565b6000620002b762000217565b9050620002c5828262000275565b919050565b600067ffffffffffffffff821115620002e857620002e762000246565b5b620002f38262000235565b9050602081019050919050565b60005b838110156200032057808201518184015260208101905062000303565b60008484015250505050565b6000620003436200033d84620002ca565b620002ab565b90508281526020810184848401111562000362576200036162000230565b5b6200036f84828562000300565b509392505050565b600082601f8301126200038f576200038e6200022b565b5b8151620003a18482602086016200032c565b91505092915050565b60008060408385031215620003c457620003c362000221565b5b600083015167ffffffffffffffff811115620003e557620003e462000226565b5b620003f38582860162000377565b925050602083015167ffffffffffffffff81111562000417576200041662000226565b5b620004258582860162000377565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048257607f821691505b6020821081036200049857620004976200043a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c3565b6200050e8683620004c3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200055b620005556200054f8462000526565b62000530565b62000526565b9050919050565b6000819050919050565b62000577836200053a565b6200058f620005868262000562565b848454620004d0565b825550505050565b600090565b620005a662000597565b620005b38184846200056c565b505050565b5b81811015620005db57620005cf6000826200059c565b600181019050620005b9565b5050565b601f8211156200062a57620005f4816200049e565b620005ff84620004b3565b810160208510156200060f578190505b620006276200061e85620004b3565b830182620005b8565b50505b505050565b600082821c905092915050565b60006200064f600019846008026200062f565b1980831691505092915050565b60006200066a83836200063c565b9150826002028217905092915050565b62000685826200042f565b67ffffffffffffffff811115620006a157620006a062000246565b5b620006ad825462000469565b620006ba828285620005df565b600060209050601f831160018114620006f25760008415620006dd578287015190505b620006e985826200065c565b86555062000759565b601f19841662000702866200049e565b60005b828110156200072c5784890151825560018201915060208501945060208101905062000705565b868310156200074c578489015162000748601f8916826200063c565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620007908162000469565b6200079c818662000761565b94506001821660008114620007ba5760018114620007d05762000807565b60ff198316865281151582028601935062000807565b620007db856200076c565b60005b83811015620007ff57815481890152600182019150602081019050620007de565b838801955050505b50505092915050565b60006200081e828462000781565b915081905092915050565b6000819050919050565b6200083e8162000829565b82525050565b6200084f8162000526565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620008828262000855565b9050919050565b620008948162000875565b82525050565b600060a082019050620008b1600083018862000833565b620008c0602083018762000833565b620008cf604083018662000833565b620008de606083018562000844565b620008ed608083018462000889565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620009338262000526565b9150620009408362000526565b92508282019050808211156200095b576200095a620008f7565b5b92915050565b600060208201905062000978600083018462000844565b92915050565b60805160a05160c0516114f1620009ae60003960006106fe015260006106ca0152600061069601526114f16000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461022a578063a9059cbb14610248578063d505accf14610278578063dd62ed3e14610294576100cf565b80633644e515146101ac57806370a08231146101ca5780637ecebe00146101fa576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806332cb6b0c1461018e575b600080fd5b6100dc6102c4565b6040516100e99190610d2f565b60405180910390f35b61010c60048036038101906101079190610dea565b610352565b6040516101199190610e45565b60405180910390f35b61012a610444565b6040516101379190610e6f565b60405180910390f35b61015a60048036038101906101559190610e8a565b61044a565b6040516101679190610e45565b60405180910390f35b610178610694565b6040516101859190610ef9565b60405180910390f35b6101966106b8565b6040516101a39190610e6f565b60405180910390f35b6101b46106c6565b6040516101c19190610f2d565b60405180910390f35b6101e460048036038101906101df9190610f48565b610723565b6040516101f19190610e6f565b60405180910390f35b610214600480360381019061020f9190610f48565b61073b565b6040516102219190610e6f565b60405180910390f35b610232610753565b60405161023f9190610d2f565b60405180910390f35b610262600480360381019061025d9190610dea565b6107e1565b60405161026f9190610e45565b60405180910390f35b610292600480360381019061028d9190610fcd565b6108f5565b005b6102ae60048036038101906102a9919061106f565b610bee565b6040516102bb9190610e6f565b60405180910390f35b600080546102d1906110de565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd906110de565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104329190610e6f565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105805782816104ff919061113e565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105cf919061113e565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106809190610e6f565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b69d3c21bcecceda100000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106fc576106f7610c13565b61071e565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610760906110de565b80601f016020809104026020016040519081016040528092919081815260200182805461078c906110de565b80156107d95780601f106107ae576101008083540402835291602001916107d9565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610832919061113e565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e39190610e6f565b60405180910390a36001905092915050565b42841015610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f906111be565b60405180910390fd5b600060016109446106c6565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016109cc969594939291906111ed565b604051602081830303815290604052805190602001206040516020016109f39291906112c6565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610a2994939291906112fd565b6020604051602081039080840390855afa158015610a4b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610abf57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af59061138e565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610bdd9190610e6f565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c459190611451565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c84959493929190611468565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cd9578082015181840152602081019050610cbe565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d0182610c9f565b610d0b8185610caa565b9350610d1b818560208601610cbb565b610d2481610ce5565b840191505092915050565b60006020820190508181036000830152610d498184610cf6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8182610d56565b9050919050565b610d9181610d76565b8114610d9c57600080fd5b50565b600081359050610dae81610d88565b92915050565b6000819050919050565b610dc781610db4565b8114610dd257600080fd5b50565b600081359050610de481610dbe565b92915050565b60008060408385031215610e0157610e00610d51565b5b6000610e0f85828601610d9f565b9250506020610e2085828601610dd5565b9150509250929050565b60008115159050919050565b610e3f81610e2a565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b610e6981610db4565b82525050565b6000602082019050610e846000830184610e60565b92915050565b600080600060608486031215610ea357610ea2610d51565b5b6000610eb186828701610d9f565b9350506020610ec286828701610d9f565b9250506040610ed386828701610dd5565b9150509250925092565b600060ff82169050919050565b610ef381610edd565b82525050565b6000602082019050610f0e6000830184610eea565b92915050565b6000819050919050565b610f2781610f14565b82525050565b6000602082019050610f426000830184610f1e565b92915050565b600060208284031215610f5e57610f5d610d51565b5b6000610f6c84828501610d9f565b91505092915050565b610f7e81610edd565b8114610f8957600080fd5b50565b600081359050610f9b81610f75565b92915050565b610faa81610f14565b8114610fb557600080fd5b50565b600081359050610fc781610fa1565b92915050565b600080600080600080600060e0888a031215610fec57610feb610d51565b5b6000610ffa8a828b01610d9f565b975050602061100b8a828b01610d9f565b965050604061101c8a828b01610dd5565b955050606061102d8a828b01610dd5565b945050608061103e8a828b01610f8c565b93505060a061104f8a828b01610fb8565b92505060c06110608a828b01610fb8565b91505092959891949750929550565b6000806040838503121561108657611085610d51565b5b600061109485828601610d9f565b92505060206110a585828601610d9f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110f657607f821691505b602082108103611109576111086110af565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610db4565b915061115483610db4565b925082820390508181111561116c5761116b61110f565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006111a8601783610caa565b91506111b382611172565b602082019050919050565b600060208201905081810360008301526111d78161119b565b9050919050565b6111e781610d76565b82525050565b600060c0820190506112026000830189610f1e565b61120f60208301886111de565b61121c60408301876111de565b6112296060830186610e60565b6112366080830185610e60565b61124360a0830184610e60565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061128f60028361124e565b915061129a82611259565b600282019050919050565b6000819050919050565b6112c06112bb82610f14565b6112a5565b82525050565b60006112d182611282565b91506112dd82856112af565b6020820191506112ed82846112af565b6020820191508190509392505050565b60006080820190506113126000830187610f1e565b61131f6020830186610eea565b61132c6040830185610f1e565b6113396060830184610f1e565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611378600e83610caa565b915061138382611342565b602082019050919050565b600060208201905081810360008301526113a78161136b565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546113db816110de565b6113e581866113ae565b94506001821660008114611400576001811461141557611448565b60ff1983168652811515820286019350611448565b61141e856113b9565b60005b8381101561144057815481890152600182019150602081019050611421565b838801955050505b50505092915050565b600061145d82846113ce565b915081905092915050565b600060a08201905061147d6000830188610f1e565b61148a6020830187610f1e565b6114976040830186610f1e565b6114a46060830185610e60565b6114b160808301846111de565b969550505050505056fea26469706673582212202d7f766db436bb486637fca309bb36116471d570ac50e37d36d54c590773e67464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461022a578063a9059cbb14610248578063d505accf14610278578063dd62ed3e14610294576100cf565b80633644e515146101ac57806370a08231146101ca5780637ecebe00146101fa576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806332cb6b0c1461018e575b600080fd5b6100dc6102c4565b6040516100e99190610d2f565b60405180910390f35b61010c60048036038101906101079190610dea565b610352565b6040516101199190610e45565b60405180910390f35b61012a610444565b6040516101379190610e6f565b60405180910390f35b61015a60048036038101906101559190610e8a565b61044a565b6040516101679190610e45565b60405180910390f35b610178610694565b6040516101859190610ef9565b60405180910390f35b6101966106b8565b6040516101a39190610e6f565b60405180910390f35b6101b46106c6565b6040516101c19190610f2d565b60405180910390f35b6101e460048036038101906101df9190610f48565b610723565b6040516101f19190610e6f565b60405180910390f35b610214600480360381019061020f9190610f48565b61073b565b6040516102219190610e6f565b60405180910390f35b610232610753565b60405161023f9190610d2f565b60405180910390f35b610262600480360381019061025d9190610dea565b6107e1565b60405161026f9190610e45565b60405180910390f35b610292600480360381019061028d9190610fcd565b6108f5565b005b6102ae60048036038101906102a9919061106f565b610bee565b6040516102bb9190610e6f565b60405180910390f35b600080546102d1906110de565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd906110de565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104329190610e6f565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105805782816104ff919061113e565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105cf919061113e565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106809190610e6f565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b69d3c21bcecceda100000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106fc576106f7610c13565b61071e565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610760906110de565b80601f016020809104026020016040519081016040528092919081815260200182805461078c906110de565b80156107d95780601f106107ae576101008083540402835291602001916107d9565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610832919061113e565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e39190610e6f565b60405180910390a36001905092915050565b42841015610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f906111be565b60405180910390fd5b600060016109446106c6565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016109cc969594939291906111ed565b604051602081830303815290604052805190602001206040516020016109f39291906112c6565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610a2994939291906112fd565b6020604051602081039080840390855afa158015610a4b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610abf57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af59061138e565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610bdd9190610e6f565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c459190611451565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c84959493929190611468565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cd9578082015181840152602081019050610cbe565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d0182610c9f565b610d0b8185610caa565b9350610d1b818560208601610cbb565b610d2481610ce5565b840191505092915050565b60006020820190508181036000830152610d498184610cf6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8182610d56565b9050919050565b610d9181610d76565b8114610d9c57600080fd5b50565b600081359050610dae81610d88565b92915050565b6000819050919050565b610dc781610db4565b8114610dd257600080fd5b50565b600081359050610de481610dbe565b92915050565b60008060408385031215610e0157610e00610d51565b5b6000610e0f85828601610d9f565b9250506020610e2085828601610dd5565b9150509250929050565b60008115159050919050565b610e3f81610e2a565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b610e6981610db4565b82525050565b6000602082019050610e846000830184610e60565b92915050565b600080600060608486031215610ea357610ea2610d51565b5b6000610eb186828701610d9f565b9350506020610ec286828701610d9f565b9250506040610ed386828701610dd5565b9150509250925092565b600060ff82169050919050565b610ef381610edd565b82525050565b6000602082019050610f0e6000830184610eea565b92915050565b6000819050919050565b610f2781610f14565b82525050565b6000602082019050610f426000830184610f1e565b92915050565b600060208284031215610f5e57610f5d610d51565b5b6000610f6c84828501610d9f565b91505092915050565b610f7e81610edd565b8114610f8957600080fd5b50565b600081359050610f9b81610f75565b92915050565b610faa81610f14565b8114610fb557600080fd5b50565b600081359050610fc781610fa1565b92915050565b600080600080600080600060e0888a031215610fec57610feb610d51565b5b6000610ffa8a828b01610d9f565b975050602061100b8a828b01610d9f565b965050604061101c8a828b01610dd5565b955050606061102d8a828b01610dd5565b945050608061103e8a828b01610f8c565b93505060a061104f8a828b01610fb8565b92505060c06110608a828b01610fb8565b91505092959891949750929550565b6000806040838503121561108657611085610d51565b5b600061109485828601610d9f565b92505060206110a585828601610d9f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110f657607f821691505b602082108103611109576111086110af565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610db4565b915061115483610db4565b925082820390508181111561116c5761116b61110f565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006111a8601783610caa565b91506111b382611172565b602082019050919050565b600060208201905081810360008301526111d78161119b565b9050919050565b6111e781610d76565b82525050565b600060c0820190506112026000830189610f1e565b61120f60208301886111de565b61121c60408301876111de565b6112296060830186610e60565b6112366080830185610e60565b61124360a0830184610e60565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061128f60028361124e565b915061129a82611259565b600282019050919050565b6000819050919050565b6112c06112bb82610f14565b6112a5565b82525050565b60006112d182611282565b91506112dd82856112af565b6020820191506112ed82846112af565b6020820191508190509392505050565b60006080820190506113126000830187610f1e565b61131f6020830186610eea565b61132c6040830185610f1e565b6113396060830184610f1e565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611378600e83610caa565b915061138382611342565b602082019050919050565b600060208201905081810360008301526113a78161136b565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546113db816110de565b6113e581866113ae565b94506001821660008114611400576001811461141557611448565b60ff1983168652811515820286019350611448565b61141e856113b9565b60005b8381101561144057815481890152600182019150602081019050611421565b838801955050505b50505092915050565b600061145d82846113ce565b915081905092915050565b600060a08201905061147d6000830188610f1e565b61148a6020830187610f1e565b6114976040830186610f1e565b6114a46060830185610e60565b6114b160808301846111de565b969550505050505056fea26469706673582212202d7f766db436bb486637fca309bb36116471d570ac50e37d36d54c590773e67464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 717,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 719,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 723,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 727,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 733,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 741,
        "contract": "contracts/Token/AvaxERC20.sol:AvaxERC20",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}